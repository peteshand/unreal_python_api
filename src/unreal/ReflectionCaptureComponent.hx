/* This file is generated, do not edit! */
package unreal;
@:pythonImport("unreal", "ReflectionCaptureComponent") extern class ReflectionCaptureComponent extends unreal.SceneComponent {
	/**
		(float):  [Read-Only] A brightness control to scale the captured scene's reflection intensity.
	**/
	public var brightness : Float;
	/**
		(Vector):  [Read-Write] World space offset to apply before capturing.
	**/
	public var capture_offset : unreal.Vector;
	/**
		(TextureCube):  [Read-Only] Cubemap to use for reflection if ReflectionSourceType is set to RS_SpecifiedCubemap.
	**/
	public var cubemap : unreal.TextureCube;
	/**
		(float):  [Read-Only] M values for RGBM, it will dynamically be generated by taking the highest RGB value into account. Explictly modifying it will require a Reflection Re-Capture.
	**/
	public var max_value_rgbm : Float;
	/**
		(MobileReflectionCompression):  [Read-Only] Indicates if the Reflection will be compressed for mobile. If set to default it will take the project wide setting.
	**/
	public var mobile_reflection_compression : unreal.MobileReflectionCompression;
	/**
		(bool):  [Read-Only] Indicates if we want to manually modify the MaxRGBM value.
	**/
	public var modify_max_value_rgbm : Bool;
	/**
		(ReflectionSourceType):  [Read-Only] Indicates where to get the reflection source from.
	**/
	public var reflection_source_type : unreal.ReflectionSourceType;
	/**
		(float):  [Read-Only] Angle to rotate the source cubemap when SourceType is set to SLS_SpecifiedCubemap.
	**/
	public var source_cubemap_angle : Float;
}