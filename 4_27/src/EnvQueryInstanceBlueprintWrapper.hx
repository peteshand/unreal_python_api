/* This file is generated, do not edit! */
package unreal;
@:pythonImport("unreal", "EnvQueryInstanceBlueprintWrapper") extern class EnvQueryInstanceBlueprintWrapper extends unreal.Object {
	/**
		Initialize self.  See help(type(self)) for accurate signature.
	**/
	@:native("__init__")
	public function ___init__(?args:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
	/**
		Initialize self.  See help(type(self)) for accurate signature.
	**/
	public function new(?args:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Void;
	/**
		x.get_item_score(item_index) -> float
		Get Item Score
		
		Args:
		    item_index (int32): 
		
		Returns:
		    float:
	**/
	public function get_item_score(item_index:Int):Float;
	/**
		x.get_query_results_as_actors() -> Array(Actor) or None
		Outputs an array filled with resulting actors.  Note that it makes sense only if ItemType is a EnvQueryItemType_ActorBase-derived type.  Returns false if there is no valid result.
		
		Returns:
		    Array(Actor) or None: 
		
		    result_actors (Array(Actor)):
	**/
	public function get_query_results_as_actors():Array<Actor>;
	/**
		x.get_query_results_as_locations() -> Array(Vector) or None
		Outputs an array of locations generated by the query. If the query generated Actors the the array is filled with their locations.  Returns false if there is no valid result.
		
		Returns:
		    Array(Vector) or None: 
		
		    result_locations (Array(Vector)):
	**/
	public function get_query_results_as_locations():Array<Vector>;
	/**
		x.get_results_as_actors() -> Array(Actor)
		DEPRECATED!  Use GetQueryResultsAsActors instead.  Returns an array filled with resulting actors. Note that it makes sense only if ItemType is a EnvQueryItemType_ActorBase-derived type.
		deprecated: Use GetQueryResultsAsActors instead, which is more efficient itself and protects against very bad perf issues in some blueprints.
		
		Returns:
		    Array(Actor):
	**/
	@:deprecated
	public function get_results_as_actors():Array<Actor>;
	/**
		x.get_results_as_locations() -> Array(Vector)
		DEPRECATED!  Use GetQueryResultsAsLocations instead.  Returns an array of locations generated by the query. If the query generated Actors the the array is filled with their locations.
		deprecated: GetQueryResultsAsLocations instead, which is more efficient itself and protects against very bad perf issues in some blueprints.
		
		Returns:
		    Array(Vector):
	**/
	@:deprecated
	public function get_results_as_locations():Array<Vector>;
	/**
		(type(Class)):  [Read-Only] Item Type
	**/
	public var item_type : Dynamic;
	/**
		(EQSQueryDoneSignature):  [Read-Write] On Query Finished Event
	**/
	public var on_query_finished_event : unreal.EQSQueryDoneSignature;
	/**
		(int32):  [Read-Only] index of query option, that generated items
	**/
	public var option_index : Int;
	/**
		(int32):  [Read-Only] Query ID
	**/
	public var query_id : Int;
	/**
		x.set_named_param(param_name, value) -> None
		Set Named Param
		
		Args:
		    param_name (Name): 
		    value (float):
	**/
	public function set_named_param(param_name:unreal.Name, value:Float):Void;
}